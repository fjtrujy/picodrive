name: CI-MultiOS

on:
  push:
    branches: 
      - '*'
    tags:
      - v*
  pull_request:
  repository_dispatch:
    types: [run_build]

jobs:
  build:
    runs-on: ${{ matrix.os[0] }}
    strategy:
      matrix:
        os: [
          [macos-latest, arm64, bash],
          [macos-13, x86_64, bash],
          [ubuntu-latest, x86_64, bash],
          [windows-latest, x86_64, msys2]
        ]
      fail-fast: false
    defaults:
     run:
      shell: ${{ matrix.os[2] }} {0}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Ubuntu packages
        if: matrix.os[0] == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get -y install curl make bash autoconf automake libgmp3-dev libmpfr-dev libmpc-dev liblzf-dev

      - name: Install macOS packages
        if: startsWith(matrix.os[0], 'macos')
        run: |
          brew update
          brew install curl make bash autoconf automake gsl gmp mpfr libmpc liblzf

      - name: Install MSYS2 packages
        if: matrix.os[0] == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW32
          install: |
            base-devel git mingw-w64-i686-gcc tar zip mingw-w64-i686-cmake mingw-w64-i686-make
          update: true
    
      - name: Download precompiled ps2dev toolchain from ps2dev/ps2dev
        run: |
          curl -sL https://github.com/ps2dev/ps2dev/releases/download/latest/ps2dev-${{ matrix.os[0] }}.tar.gz | tar xvz -C ./

      - name: Compile project
        run: |
          export PS2DEV=$PWD/ps2dev
          export PS2SDK=$PS2DEV/ps2sdk
          export GSKIT=$PS2DEV/gsKit
          export PATH=$PATH:$PS2DEV/bin:$PS2DEV/ee/bin:$PS2DEV/iop/bin:$PS2DEV/dvp/bin:$PS2SDK/bin

          # Download and compile ps2-packer as it is not working fine with precompiled binaries
          git clone --depth 1 https://github.com/ps2dev/ps2-packer && cd ps2-packer && make install && cd .. && rm -rf ps2-packer
          
          export CROSS_COMPILE=mips64r5900el-ps2-elf-
          git config --global --add safe.directory $PWD
          ver=$(cut -d'"' -f2 platform/common/version.h)-$(git rev-parse --short HEAD)
          ./configure --platform=ps2
          make -j$(getconf _NPROCESSORS_ONLN)
          make -C platform/ps2 rel VER=$ver

      - name: Get short SHA
        id: slug
        run: echo "sha8=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT

      - name: artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PS2-${{ steps.slug.outputs.sha8 }}-${{matrix.os[0]}}-${{matrix.os[1]}}
          path: PicoDrive_ps2_*.zip